<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
  <dict>
    <key>name</key>
    <string>idl</string>
    <key>scopeName</key>
    <string>source.idl</string>
    <key>comment</key>
    <string>Generated automatically during the extension build process from YAML</string>
    <key>uuid</key>
    <string>48F8858B-72FF-11D9-BFEE-000D93589AF6</string>
    <key>patterns</key>
    <array>
      <dict>
        <key>include</key>
        <string>#all_tokens</string>
      </dict>
    </array>
    <key>repository</key>
    <dict>
      <key>all_tokens</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#routine_def_tokens</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#prompts</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#executive_command</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#default_tokens</string>
          </dict>
        </array>
      </dict>
      <key>default_tokens</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#python</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#comma</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#assignment</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#control_tokens</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#operator_tokens</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#line_continuation</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#logical_tokens</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#loop_tokens</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#block</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#function_tokens</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#routine_call_pro_method</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#access_tokens</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#numbers</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#grouper_tokens</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#control_main_level_end</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#routine_call_pro</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#variable_tokens</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#quote_tokens</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#comment_tokens</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#include</string>
          </dict>
        </array>
      </dict>
      <key>routine_tokens</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#comma</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#operator_tokens</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#line_continuation</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#logic_ternary_then</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#function_tokens</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#access_tokens</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#numbers</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#grouper_tokens</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#variable_tokens</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#quote_tokens</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#comment_tokens</string>
          </dict>
        </array>
      </dict>
      <key>expression_tokens</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#operator_tokens</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#line_continuation</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#logic_ternary_then</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#function_tokens</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#access_tokens</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#numbers</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#grouper_tokens</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#variable_tokens</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#quote_tokens</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#comment_tokens</string>
          </dict>
        </array>
      </dict>
      <key>access_tokens</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#access_property</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#access_indexed_property</string>
          </dict>
        </array>
      </dict>
      <key>comment_tokens</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#comment_block</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#comment</string>
          </dict>
        </array>
      </dict>
      <key>control_tokens</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#control_compound</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#control_jump</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#control_continue</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#control_break</string>
          </dict>
        </array>
      </dict>
      <key>grouper_tokens</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#structure</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#bracket_square</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#bracket_paren</string>
          </dict>
        </array>
      </dict>
      <key>function_tokens</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#routine_call_lambda</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#routine_call_func_method</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#routine_call_func</string>
          </dict>
        </array>
      </dict>
      <key>logical_tokens</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#logic_if</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#logic_case</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#logic_switch</string>
          </dict>
        </array>
      </dict>
      <key>loop_tokens</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#loop_for_foreach</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#loop_while</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#loop_repeat</string>
          </dict>
        </array>
      </dict>
      <key>operator_tokens</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#operator_pointer</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#operator</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#operator_control</string>
          </dict>
        </array>
      </dict>
      <key>quote_tokens</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#quote_double_number</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#quote_double_basic</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#quote_double</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#quote_single_number</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#quote_single_basic</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#quote_single</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#string_template_literal</string>
          </dict>
        </array>
      </dict>
      <key>routine_def_tokens</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#routine_def</string>
          </dict>
        </array>
      </dict>
      <key>routine_def_parameter_tokens</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#line_continuation</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#routine_kw_def</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#routine_arg</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#comment</string>
          </dict>
        </array>
      </dict>
      <key>structure_tokens</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#line_continuation</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#comment_tokens</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#structure_name</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#structure_inheritance</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#structure_property</string>
          </dict>
        </array>
      </dict>
      <key>named_structure_tokens</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#structure_inheritance</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#structure_property</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#routine_tokens</string>
          </dict>
        </array>
      </dict>
      <key>type_tokens</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#type_no_highlight</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#numbers</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#quote_tokens</string>
          </dict>
        </array>
      </dict>
      <key>variable_tokens</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#structure_self</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#variable_system</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#variable</string>
          </dict>
        </array>
      </dict>
      <key>assignment</key>
      <dict>
        <key>name</key>
        <string>group.assignment.idl</string>
        <key>begin</key>
        <string>(?i)(\*|\+|-|\^|##|#|\/|&lt;|&gt;|and|or|xor|eq|ne|lt|le|gt|ge|mod)?=</string>
        <key>beginCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>keyword.operator.idl</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?i)(?=\buntil\b|\belse\b|\bthen\b|\bdo\b|\bof\b|\)|\]|\}|,|;)|(?=(?&lt;!&amp;)&amp;(?!&amp;))|(?&lt;!\$\s*|\$\s*;.*)$</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#expression_tokens</string>
          </dict>
        </array>
      </dict>
      <key>assignment_basic</key>
      <dict>
        <key>name</key>
        <string>keyword.operator.idl</string>
        <key>match</key>
        <string>(?i)(\*|\+|-|\^|##|#|\/|&lt;|&gt;|and|or|xor|eq|ne|lt|le|gt|ge|mod)?=</string>
      </dict>
      <key>access_property</key>
      <dict>
        <key>match</key>
        <string>(?i)\.([a-z_][a-z0-9_$]*)</string>
        <key>captures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>entity.other.attribute-name.idl</string>
          </dict>
        </dict>
      </dict>
      <key>access_indexed_property</key>
      <dict>
        <key>name</key>
        <string>group.property.indexed.idl</string>
        <key>begin</key>
        <string>(?i)\.\(</string>
        <key>beginCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>entity.other.attribute-name.idl</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?i)\)</string>
        <key>endCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>entity.other.attribute-name.idl</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#routine_tokens</string>
          </dict>
        </array>
      </dict>
      <key>block</key>
      <dict>
        <key>name</key>
        <string>group.block.idl</string>
        <key>begin</key>
        <string>(?i)\s*\bbegin\b</string>
        <key>beginCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>keyword.control.idl</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?i)\s*(\bendif\b|\bendelse\b|\bendfor\b|\bendforeach\b|\bendrep\b|\bendwhile\b|\bendswitch\b|\bendcase\b|\bend\b)</string>
        <key>endCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>keyword.control.idl</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#default_tokens</string>
          </dict>
        </array>
      </dict>
      <key>block_loop</key>
      <dict>
        <key>name</key>
        <string>group.block.idl</string>
        <key>begin</key>
        <string>(?i)\s*\bbegin\b</string>
        <key>beginCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>keyword.control.idl</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?i)\s*(\bendif\b|\bendelse\b|\bendfor\b|\bendforeach\b|\bendrep\b|\bendwhile\b|\bendswitch\b|\bendcase\b|\bend\b)</string>
        <key>endCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>keyword.control.idl</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#default_tokens</string>
          </dict>
        </array>
      </dict>
      <key>block_logic</key>
      <dict>
        <key>name</key>
        <string>group.block.idl</string>
        <key>begin</key>
        <string>(?i)\s*\bbegin\b</string>
        <key>beginCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>keyword.control.idl</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?i)\s*(\bendif\b|\bendelse\b|\bendfor\b|\bendforeach\b|\bendrep\b|\bendwhile\b|\bendswitch\b|\bendcase\b|\bend\b)</string>
        <key>endCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>keyword.control.idl</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#default_tokens</string>
          </dict>
        </array>
      </dict>
      <key>bracket_square</key>
      <dict>
        <key>name</key>
        <string>group.brackets.square.idl</string>
        <key>begin</key>
        <string>(?i)\[</string>
        <key>beginCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>meta.brace.square.idl</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?i)\]</string>
        <key>endCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>meta.brace.square.idl</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#expression_tokens</string>
          </dict>
        </array>
      </dict>
      <key>bracket_paren</key>
      <dict>
        <key>name</key>
        <string>group.brackets.paren.idl</string>
        <key>begin</key>
        <string>(?i)\(</string>
        <key>beginCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>meta.brace.round.idl</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?i)\)</string>
        <key>endCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>meta.brace.round.idl</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#expression_tokens</string>
          </dict>
        </array>
      </dict>
      <key>comma</key>
      <dict>
        <key>name</key>
        <string>keyword.operator.idl</string>
        <key>match</key>
        <string>(?i),</string>
      </dict>
      <key>comment</key>
      <dict>
        <key>name</key>
        <string>comment.line.idl</string>
        <key>match</key>
        <string>(?i);\+?\s*(TODO:)?(.*)$</string>
        <key>captures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>constant.character.escape.idl</string>
          </dict>
          <key>2</key>
          <dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#comment_disabled_problem</string>
              </dict>
            </array>
          </dict>
        </dict>
      </dict>
      <key>comment_disabled_problem</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>storage.type.class.jsdoc</string>
            <key>match</key>
            <string>(?i)idl-disable-next-line|idl-disable-line</string>
          </dict>
          <dict>
            <key>name</key>
            <string>markup.heading.idl</string>
            <key>match</key>
            <string>(?i)idl-disable</string>
          </dict>
        </array>
      </dict>
      <key>comment_block</key>
      <dict>
        <key>name</key>
        <string>comment.block.idl</string>
        <key>begin</key>
        <string>(?i)^\s*(?=;\s*\+.*)</string>
        <key>end</key>
        <string>(?i)^(?!\s*;|\s*$)</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#comment_disabled_problem</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#comment_docs_header_legacy</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#comment_docs_header</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#comment_docs_arg_kw</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#comment_docs_prop</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#comment_example_code_block</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#comment</string>
          </dict>
        </array>
      </dict>
      <key>comment_example_code_block</key>
      <dict>
        <key>begin</key>
        <string>(?i)^\s*(;\s*```idl.*$)</string>
        <key>beginCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>comment.line.idl</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?i)^\s*;\s*```|^(?!\s*(;|$))</string>
        <key>endCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>comment.line.idl</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#comment_example_code_line</string>
          </dict>
        </array>
      </dict>
      <key>comment_example_code_line</key>
      <dict>
        <key>match</key>
        <string>(?i)(;\s*)(.*$)</string>
        <key>captures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>comment.line.idl</string>
          </dict>
          <key>2</key>
          <dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#all_tokens</string>
              </dict>
            </array>
          </dict>
        </dict>
      </dict>
      <key>comment_docs_header_legacy</key>
      <dict>
        <key>name</key>
        <string>comment.line.idl</string>
        <key>match</key>
        <string>(?i);\s*(@[a-z_$0-9]+\s*(?:[a-z_0-9$]+(?:\s*,\s*)?)+)(.*$)</string>
        <key>captures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#comment_docs_header_legacy_param</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#comment_docs_header_legacy_top_level</string>
              </dict>
            </array>
          </dict>
          <key>2</key>
          <dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#comment_docs_header_fancy_text</string>
              </dict>
            </array>
          </dict>
        </dict>
      </dict>
      <key>comment_docs_header_fancy_text</key>
      <dict>
        <key>name</key>
        <string>entity.name.type.ts</string>
        <key>match</key>
        <string>(?i)\{[^\}]*\}</string>
      </dict>
      <key>comment_docs_header_legacy_param</key>
      <dict>
        <key>name</key>
        <string>markup.italic.idl</string>
        <key>match</key>
        <string>(?i)@(param|arg|keyword)\s*((?:[a-z_0-9$]+(?:\s*,\s*)?)+)</string>
        <key>captures</key>
        <dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>support.type.idl</string>
          </dict>
        </dict>
      </dict>
      <key>comment_docs_header_legacy_top_level</key>
      <dict>
        <key>name</key>
        <string>markup.heading.idl</string>
        <key>match</key>
        <string>(?i)@[a-z_$0-9]+</string>
      </dict>
      <key>comment_docs_header</key>
      <dict>
        <key>name</key>
        <string>comment.line.idl</string>
        <key>match</key>
        <string>(?i);\s*:([^:]*?):(.*)$</string>
        <key>captures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>markup.heading.idl</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>entity.name.type.ts</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#type_tokens</string>
              </dict>
            </array>
          </dict>
        </dict>
      </dict>
      <key>comment_docs_arg_kw</key>
      <dict>
        <key>name</key>
        <string>comment.line.idl</string>
        <key>match</key>
        <string>(?i);\s*([^:\s]*)\s*:([^,]*),([^,]*),\s*((?:[a-z_0-9$!'"]+\s*(?:&lt;.+&gt;)?\s*\|?\s*)+),?([^,]*)?</string>
        <key>captures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>markup.italic.idl</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>support.type.idl</string>
          </dict>
          <key>3</key>
          <dict>
            <key>name</key>
            <string>support.type.idl</string>
          </dict>
          <key>4</key>
          <dict>
            <key>name</key>
            <string>entity.name.type.ts</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#type_tokens</string>
              </dict>
            </array>
          </dict>
          <key>5</key>
          <dict>
            <key>name</key>
            <string>markup.bold.idl</string>
          </dict>
        </dict>
      </dict>
      <key>comment_docs_prop</key>
      <dict>
        <key>name</key>
        <string>comment.line.idl</string>
        <key>match</key>
        <string>(?i);\s*(?!TODO)([^:\s]*)\s*:\s*((?:[a-z_0-9$!'"]+\s*(?:&lt;.+&gt;)?\s*\|?\s*)+)</string>
        <key>captures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>markup.italic.idl</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>entity.name.type.ts</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#type_tokens</string>
              </dict>
            </array>
          </dict>
        </dict>
      </dict>
      <key>control_break</key>
      <dict>
        <key>name</key>
        <string>keyword.control.idl</string>
        <key>match</key>
        <string>(?i)\s*\bbreak\b</string>
      </dict>
      <key>control_continue</key>
      <dict>
        <key>name</key>
        <string>keyword.control.idl</string>
        <key>match</key>
        <string>(?i)\s*\bcontinue\b</string>
      </dict>
      <key>control_compound_option</key>
      <dict>
        <key>name</key>
        <string>variable.other.readwrite.ts.idl</string>
        <key>match</key>
        <string>(?i)[a-z0-9_$]+</string>
      </dict>
      <key>control_jump</key>
      <dict>
        <key>name</key>
        <string>entity.name.type.idl</string>
        <key>match</key>
        <string>(?i)\b[a-z][a-z0-9_$]*(\s*:)</string>
      </dict>
      <key>control_main_level_end</key>
      <dict>
        <key>name</key>
        <string>keyword.control.idl</string>
        <key>match</key>
        <string>(?i)\bend\b</string>
      </dict>
      <key>control_compound</key>
      <dict>
        <key>name</key>
        <string>group.control.compound.idl</string>
        <key>begin</key>
        <string>(?i)\s*(\bcommon\b|\bcompile_opt\b|\bforward_function\b|\bgoto\b|\on_ioerror\b)</string>
        <key>beginCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>keyword.control.idl</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?i)(?=;|(?&lt;!&amp;)&amp;(?!&amp;))|(?&lt;!\$\s*|\$\s*;.*)$</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#line_continuation</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#control_compound_option</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#comma</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#comment</string>
          </dict>
        </array>
      </dict>
      <key>empty_line</key>
      <dict>
        <key>name</key>
        <string>group.empty.line.idl</string>
        <key>match</key>
        <string>(?i)^\s*(;.*)?$</string>
        <key>captures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#comment_tokens</string>
              </dict>
            </array>
          </dict>
        </dict>
      </dict>
      <key>executive_command</key>
      <dict>
        <key>name</key>
        <string>entity.name.type.idl</string>
        <key>match</key>
        <string>(?i)^\s*(\.[a-z_]+)\s*(.*)$</string>
        <key>captures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>entity.name.type.idl</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>variable.other.readwrite.ts.idl</string>
          </dict>
        </dict>
      </dict>
      <key>include</key>
      <dict>
        <key>name</key>
        <string>entity.name.type.idl</string>
        <key>match</key>
        <string>(?i)@([a-z0-9_$.]*)</string>
      </dict>
      <key>line_continuation</key>
      <dict>
        <key>name</key>
        <string>group.line-continuation.idl</string>
        <key>begin</key>
        <string>(?i)(\$)(.*)$</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>keyword.operator.idl</string>
          </dict>
          <key>2</key>
          <dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#comment_tokens</string>
              </dict>
            </array>
          </dict>
        </dict>
        <key>end</key>
        <string>(?i)^(?!(\s*)(;.*)?$)</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#line_continuation</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#comment_tokens</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#empty_line</string>
          </dict>
        </array>
      </dict>
      <key>logic_if</key>
      <dict>
        <key>name</key>
        <string>group.logic.if.idl</string>
        <key>begin</key>
        <string>(?i)\s*\bif\b</string>
        <key>beginCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>keyword.control.idl</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?i)(?=;|(?&lt;!&amp;)&amp;(?!&amp;))|(?&lt;!\$\s*|\$\s*;.*)$</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#logic_if_then</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#expression_tokens</string>
          </dict>
        </array>
      </dict>
      <key>logic_if_then</key>
      <dict>
        <key>name</key>
        <string>group.logic.then.idl</string>
        <key>begin</key>
        <string>(?i)\bthen\b</string>
        <key>beginCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>keyword.control.idl</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?i)(?=;|(?&lt;!&amp;)&amp;(?!&amp;))|(?&lt;!\$\s*|\$\s*;.*)$</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#logic_if_then_else</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#default_tokens</string>
          </dict>
        </array>
      </dict>
      <key>logic_if_then_else</key>
      <dict>
        <key>name</key>
        <string>group.logic.else.idl</string>
        <key>begin</key>
        <string>(?i)\belse\b</string>
        <key>beginCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>keyword.control.idl</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?i)(?=;|(?&lt;!&amp;)&amp;(?!&amp;))|(?&lt;!\$\s*|\$\s*;.*)$</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#default_tokens</string>
          </dict>
        </array>
      </dict>
      <key>logic_case</key>
      <dict>
        <key>name</key>
        <string>group.logic.case.idl</string>
        <key>begin</key>
        <string>(?i)\s*\bcase\b</string>
        <key>beginCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>keyword.control.idl</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?i)\bendcase\b|\bend\b</string>
        <key>endCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>keyword.control.idl</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#logic_case_switch_of</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#expression_tokens</string>
          </dict>
        </array>
      </dict>
      <key>logic_switch</key>
      <dict>
        <key>name</key>
        <string>group.logic.switch.idl</string>
        <key>begin</key>
        <string>(?i)\s*\bswitch\b</string>
        <key>beginCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>keyword.control.idl</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?i)\bendswitch\b|\bend\b</string>
        <key>endCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>keyword.control.idl</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#logic_case_switch_of</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#expression_tokens</string>
          </dict>
        </array>
      </dict>
      <key>logic_case_switch_of</key>
      <dict>
        <key>name</key>
        <string>group.logic.of.idl</string>
        <key>begin</key>
        <string>(?i)\bof\b</string>
        <key>beginCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>keyword.control.idl</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?i)(?=\bend)</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#logic_case_switch_then</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#expression_tokens</string>
          </dict>
        </array>
      </dict>
      <key>logic_case_switch_then</key>
      <dict>
        <key>name</key>
        <string>group.logic.then.idl</string>
        <key>begin</key>
        <string>(?i)(\s*else\s*)?:</string>
        <key>beginCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>keyword.control.idl</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?i)(?=;|(?&lt;!&amp;)&amp;(?!&amp;))|(?&lt;!\$\s*|\$\s*;.*)$</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#block_logic</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#default_tokens</string>
          </dict>
        </array>
      </dict>
      <key>logic_ternary_then</key>
      <dict>
        <key>begin</key>
        <string>(?i)\?</string>
        <key>beginCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>keyword.control.idl</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?i)(?=\buntil\b|\belse\b|\bthen\b|\bdo\b|\bof\b|\)|\]|\}|,|;)|(?=(?&lt;!&amp;)&amp;(?!&amp;))|(?&lt;!\$\s*|\$\s*;.*)$</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#logic_ternary_else</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#expression_tokens</string>
          </dict>
        </array>
      </dict>
      <key>logic_ternary_else</key>
      <dict>
        <key>begin</key>
        <string>(?i)\s*:\s*</string>
        <key>beginCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>keyword.control.idl</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?i)(?=\buntil\b|\belse\b|\bthen\b|\bdo\b|\bof\b|\)|\]|\}|,|;|\?|:]|(?=(?&lt;!&amp;)&amp;(?!&amp;))|\|\||\bor\b|(\.|-&gt;)([a-z_][a-z0-9_$:]*)(?=\s*(?&lt;!&amp;)&amp;(?!&amp;)|\s*,|\s*;|\s+\$|\s*$))|(?&lt;!\$\s*|\$\s*;.*)$</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#expression_tokens</string>
          </dict>
        </array>
      </dict>
      <key>loop_for_foreach</key>
      <dict>
        <key>name</key>
        <string>group.loop.for-foreach.idl</string>
        <key>begin</key>
        <string>(?i)\bfor\b|\bforeach\b</string>
        <key>beginCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>keyword.control.idl</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?i)(?&lt;=\bendif\b|\bendelse\b|\bendfor\b|\bendforeach\b|\bendrep\b|\bendwhile\b|\bendswitch\b|\bendcase\b|\bend\b)|(?=;|(?&lt;!&amp;)&amp;(?!&amp;))|(?&lt;!\$\s*|\$\s*;.*)$</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#loop_do</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#assignment_basic</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#routine_tokens</string>
          </dict>
        </array>
      </dict>
      <key>loop_while</key>
      <dict>
        <key>name</key>
        <string>group.loop.whileidl</string>
        <key>begin</key>
        <string>(?i)\s*\bwhile\b</string>
        <key>beginCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>keyword.control.idl</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?i)(?&lt;=\bendif\b|\bendelse\b|\bendfor\b|\bendforeach\b|\bendrep\b|\bendwhile\b|\bendswitch\b|\bendcase\b|\bend\b)|(?=;|(?&lt;!&amp;)&amp;(?!&amp;))|(?&lt;!\$\s*|\$\s*;.*)$</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#loop_do</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#expression_tokens</string>
          </dict>
        </array>
      </dict>
      <key>loop_do</key>
      <dict>
        <key>name</key>
        <string>group.loop.do.idl</string>
        <key>begin</key>
        <string>(?i)\bdo\b</string>
        <key>beginCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>keyword.control.idl</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?i)(?&lt;=\bendif\b|\bendelse\b|\bendfor\b|\bendforeach\b|\bendrep\b|\bendwhile\b|\bendswitch\b|\bendcase\b|\bend\b)|(?=;|(?&lt;!&amp;)&amp;(?!&amp;))|(?&lt;!\$\s*|\$\s*;.*)$</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#block_loop</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#default_tokens</string>
          </dict>
        </array>
      </dict>
      <key>loop_repeat</key>
      <dict>
        <key>name</key>
        <string>group.loop.repeat.idl</string>
        <key>begin</key>
        <string>(?i)\brepeat\b</string>
        <key>end</key>
        <string>(?i)(?&lt;=\bendif\b|\bendelse\b|\bendfor\b|\bendforeach\b|\bendrep\b|\bendwhile\b|\bendswitch\b|\bendcase\b|\bend\b)|(?=;|(?&lt;!&amp;)&amp;(?!&amp;))|(?&lt;!\$\s*|\$\s*;.*)$</string>
        <key>beginCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>keyword.control.idl</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#loop_until</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#default_tokens</string>
          </dict>
        </array>
      </dict>
      <key>loop_until</key>
      <dict>
        <key>name</key>
        <string>group.loop.until.idl</string>
        <key>begin</key>
        <string>(?i)\s*\buntil\b</string>
        <key>beginCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>keyword.control.idl</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?i)(?=;|(?&lt;!&amp;)&amp;(?!&amp;))|(?&lt;!\$\s*|\$\s*;.*)$</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#expression_tokens</string>
          </dict>
        </array>
      </dict>
      <key>numbers</key>
      <dict>
        <key>name</key>
        <string>constant.numeric.idl</string>
        <key>match</key>
        <string>(?i)(?&lt;![a-z_$])(0[box][a-z0-9]*|[0-9.]+((e|d)\+?-?[0-9]*|[a-z]*))(?:i|j)?</string>
      </dict>
      <key>operator</key>
      <dict>
        <key>name</key>
        <string>keyword.operator.idl</string>
        <key>match</key>
        <string>(?i)(\*|\+\+|--|\^|##|#|\*|\/|\+|-(?!&gt;)|&lt;|(?&lt;!-)&gt;|~)(?!=)</string>
      </dict>
      <key>operator_control</key>
      <dict>
        <key>name</key>
        <string>keyword.control.idl</string>
        <key>match</key>
        <string>(?i)(\bmod\b|\bnot\b|\beq\b|\bne\b|\ble\b|\blt\b|\bge\b|\bgt\b|\band\b|\bor\b|\bxor\b|&amp;&amp;|\|\|)(?!=)</string>
      </dict>
      <key>operator_pointer</key>
      <dict>
        <key>name</key>
        <string>entity.name.type.idl</string>
        <key>match</key>
        <string>(?i)(?&lt;=\(|=|,|\[|:|^)\s*\*</string>
      </dict>
      <key>prompts</key>
      <dict>
        <key>name</key>
        <string>group.prompt.idl</string>
        <key>begin</key>
        <string>(?i)^\s*(?:idl|envi)&gt;</string>
        <key>beginCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>entity.name.type.idl</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?i)(?=(?&lt;!&amp;)&amp;(?!&amp;))|(?&lt;!\$\s*|\$\s*;.*)$</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#default_tokens</string>
          </dict>
        </array>
      </dict>
      <key>quote_escape</key>
      <dict>
        <key>name</key>
        <string>constant.character.escape.idl</string>
        <key>match</key>
        <string>(?i)\\n|\\r</string>
      </dict>
      <key>quote_double_basic</key>
      <dict>
        <key>name</key>
        <string>string.quoted.double.idl</string>
        <key>match</key>
        <string>(?i)""(?!")</string>
      </dict>
      <key>quote_double</key>
      <dict>
        <key>name</key>
        <string>string.quoted.double.idl</string>
        <key>begin</key>
        <string>(?i)"</string>
        <key>end</key>
        <string>(?i)$|(?&lt;!")"(?!")</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#quote_double_escape</string>
          </dict>
        </array>
      </dict>
      <key>quote_double_escape</key>
      <dict>
        <key>name</key>
        <string>constant.character.escape.idl</string>
        <key>match</key>
        <string>(?i)""</string>
      </dict>
      <key>quote_double_number</key>
      <dict>
        <key>name</key>
        <string>constant.numeric.idl</string>
        <key>match</key>
        <string>(?i)"[^"]+"[box]u?(?:b|s|ll|l|i|j)*\b|"[0-7]+u?(?:b|s|ll|l|i|j)*(?=[^\w.]|$)(?!")</string>
      </dict>
      <key>quote_single_basic</key>
      <dict>
        <key>name</key>
        <string>string.quoted.double.idl</string>
        <key>match</key>
        <string>(?i)''(?!')</string>
      </dict>
      <key>quote_single</key>
      <dict>
        <key>name</key>
        <string>string.quoted.single.idl</string>
        <key>begin</key>
        <string>(?i)'</string>
        <key>end</key>
        <string>(?i)$|(?&lt;!')'(?!')</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#quote_single_escape</string>
          </dict>
        </array>
      </dict>
      <key>quote_single_escape</key>
      <dict>
        <key>name</key>
        <string>constant.character.escape.idl</string>
        <key>match</key>
        <string>(?i)''</string>
      </dict>
      <key>quote_single_number</key>
      <dict>
        <key>name</key>
        <string>constant.numeric.idl</string>
        <key>match</key>
        <string>(?i)'[^']+'[box]u?(?:b|s|ll|l|i|j)*\b</string>
      </dict>
      <key>routine_kw</key>
      <dict>
        <key>name</key>
        <string>parameter.usage.keyword.idl</string>
        <key>match</key>
        <string>(?i)\b\s*([a-z_][a-z0-9_$]*)(\s*=)</string>
        <key>captures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>entity.other.attribute-name.idl</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>keyword.operator.idl</string>
          </dict>
        </dict>
      </dict>
      <key>routine_binary_kw</key>
      <dict>
        <key>name</key>
        <string>parameter.usage.keyword.idl</string>
        <key>match</key>
        <string>(?i)(?&lt;=^\s*|\(\s*|,\s*|\[\s*)(\/[a-z_][a-z0-9_$]*)</string>
        <key>captures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>entity.other.attribute-name.idl</string>
          </dict>
        </dict>
      </dict>
      <key>keywords</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#routine_kw</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#routine_binary_kw</string>
          </dict>
        </array>
      </dict>
      <key>routine_call_lambda</key>
      <dict>
        <key>name</key>
        <string>group.call.func.idl</string>
        <key>begin</key>
        <string>(?i)(lambda)\s*(\()</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>entity.name.type.idl</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>meta.brace.round.idl</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?i)\)</string>
        <key>endCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>meta.brace.round.idl</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#routine_tokens</string>
          </dict>
        </array>
      </dict>
      <key>routine_call_func</key>
      <dict>
        <key>name</key>
        <string>group.call.func.idl</string>
        <key>begin</key>
        <string>(?i)([a-z_][a-z0-9_$]*)\s*(\()</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>entity.name.function.idl</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>meta.brace.round.idl</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?i)\)</string>
        <key>endCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>meta.brace.round.idl</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#keywords</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#routine_tokens</string>
          </dict>
        </array>
      </dict>
      <key>routine_call_func_method</key>
      <dict>
        <key>name</key>
        <string>group.call.func-method.idl</string>
        <key>begin</key>
        <string>(?i)\s*(\.|-&gt;)\s*([a-z0-9_$:]+)(\()</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>keyword.operator.idl</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>entity.name.function.idl-method.idl</string>
          </dict>
          <key>3</key>
          <dict>
            <key>name</key>
            <string>meta.brace.round.idl</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?i)\)</string>
        <key>endCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>meta.brace.round.idl</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#keywords</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#routine_tokens</string>
          </dict>
        </array>
      </dict>
      <key>routine_call_pro</key>
      <dict>
        <key>name</key>
        <string>group.call.pro.idl</string>
        <key>begin</key>
        <string>(?i)(?&lt;=^|\bdo\b|\bthen\b|\belse\b|\brepeat\b|:|^\s*idl&gt;|^\s*envi&gt;)\s*([a-z_][a-z0-9_$]*)(?!\.)(?=\s*,|\s*;|\s+\$|\s*$|\s*(?&lt;!&amp;)&amp;(?!&amp;))</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>support.function.idl-procedure</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?i)(?=until|else|(?=(?&lt;!&amp;)&amp;(?!&amp;)))|(?&lt;!\$\s*|\$\s*;)$</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#keywords</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#routine_tokens</string>
          </dict>
        </array>
      </dict>
      <key>routine_call_pro_method</key>
      <dict>
        <key>name</key>
        <string>group.call.pro-method.idl</string>
        <key>begin</key>
        <string>(?i)(\.|-&gt;)\s*([a-z_][a-z0-9_$:]*)(?=\s*(?&lt;!&amp;)&amp;(?!&amp;)|\s*,|\s*;|\s+\$|\s*$)</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>keyword.operator.idl</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>support.function.idl-procedure-method</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?i)(?=until|else|(?=(?&lt;!&amp;)&amp;(?!&amp;)))|(?&lt;!\$\s*|\$\s*;)$</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#keywords</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#routine_tokens</string>
          </dict>
        </array>
      </dict>
      <key>routine_arg</key>
      <dict>
        <key>match</key>
        <string>(?i),?\s*([a-z_][a-z0-9_$]*)\s*</string>
        <key>captures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>variable.parameter.idl</string>
          </dict>
        </dict>
      </dict>
      <key>routine_kw_def</key>
      <dict>
        <key>match</key>
        <string>(?i),?\s*([a-z_][a-z0-9_$]*\s*=\s*)([a-z_][a-z0-9_$]*)</string>
        <key>captures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>name</key>
                <string>parameter.definition.keyword.idl</string>
                <key>match</key>
                <string>(?i)([a-z_][a-z0-9_$]*)(\s*=\s*)</string>
                <key>captures</key>
                <dict>
                  <key>1</key>
                  <dict>
                    <key>name</key>
                    <string>entity.other.attribute-name.idl</string>
                  </dict>
                  <key>2</key>
                  <dict>
                    <key>name</key>
                    <string>keyword.operator.idl</string>
                  </dict>
                </dict>
              </dict>
            </array>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>variable.other.readwrite.ts.idl</string>
          </dict>
        </dict>
      </dict>
      <key>pro_name</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>support.function.idl-procedure-method</string>
            <key>match</key>
            <string>(?i)([a-z_$!0-9]+)::([a-z_$0-9]+)</string>
          </dict>
          <dict>
            <key>name</key>
            <string>support.function.idl-procedure</string>
            <key>match</key>
            <string>(?i)[a-z_$!0-9]+</string>
          </dict>
        </array>
      </dict>
      <key>pro_name_and_parameters</key>
      <dict>
        <key>name</key>
        <string>group.routine.name.idl</string>
        <key>begin</key>
        <string>(?i)(?&lt;=\bpro\s+)([a-z_][a-z0-9_$:]*)</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#pro_name</string>
              </dict>
            </array>
          </dict>
        </dict>
        <key>end</key>
        <string>(?i)$</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#routine_def_parameter_tokens</string>
          </dict>
        </array>
      </dict>
      <key>function_name</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>entity.name.function.idl-method</string>
            <key>match</key>
            <string>(?i)([a-z_$!0-9]+)::([a-z_$0-9]+)</string>
          </dict>
          <dict>
            <key>name</key>
            <string>entity.name.function.idl</string>
            <key>match</key>
            <string>(?i)[a-z_$!0-9]+</string>
          </dict>
        </array>
      </dict>
      <key>function_name_and_parameters</key>
      <dict>
        <key>name</key>
        <string>group.routine.name.idl</string>
        <key>begin</key>
        <string>(?i)(?&lt;=\bfunction\s+)([a-z_][a-z0-9_$:]*)</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#function_name</string>
              </dict>
            </array>
          </dict>
        </dict>
        <key>end</key>
        <string>(?i)$</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#routine_def_parameter_tokens</string>
          </dict>
        </array>
      </dict>
      <key>routine_def</key>
      <dict>
        <key>name</key>
        <string>group.routine.definition.idl</string>
        <key>begin</key>
        <string>(?i)^\s*(pro\b|function\b)</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>keyword.control.idl</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?i)^\s*\bend\b</string>
        <key>endCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>keyword.control.idl</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#pro_name_and_parameters</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#function_name_and_parameters</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#default_tokens</string>
          </dict>
        </array>
      </dict>
      <key>python</key>
      <dict>
        <key>name</key>
        <string>meta.embedded.block.python</string>
        <key>begin</key>
        <string>(?i)^\s*&gt;&gt;&gt;</string>
        <key>beginCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>entity.name.type.idl</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?i)$</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>source.python</string>
          </dict>
        </array>
      </dict>
      <key>string_template_escape</key>
      <dict>
        <key>name</key>
        <string>constant.character.escape.idl</string>
        <key>match</key>
        <string>(?i)\\(?:[\\bfnrtv$`]|x[a-f0-9]{2})?</string>
      </dict>
      <key>string_template_literal</key>
      <dict>
        <key>name</key>
        <string>string.template.idl</string>
        <key>begin</key>
        <string>(?i)`</string>
        <key>beginCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>string.template.idl</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?i)`</string>
        <key>endCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>string.template.idl</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#string_template_expression</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#string_template_escape</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#quote_escape</string>
          </dict>
        </array>
      </dict>
      <key>string_template_expression</key>
      <dict>
        <key>name</key>
        <string>meta.embedded.idl</string>
        <key>begin</key>
        <string>(?i)(\$){</string>
        <key>beginCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>meta.brace.idl</string>
          </dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>entity.name.type.idl</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?i)}</string>
        <key>endCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>meta.brace.idl</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#expression_tokens</string>
          </dict>
        </array>
      </dict>
      <key>structure</key>
      <dict>
        <key>name</key>
        <string>group.structure.idl</string>
        <key>begin</key>
        <string>(?i){</string>
        <key>beginCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>meta.brace.idl</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?i)}</string>
        <key>endCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>meta.brace.idl</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#structure_tokens</string>
          </dict>
        </array>
      </dict>
      <key>structure_name</key>
      <dict>
        <key>begin</key>
        <string>(?i)(?&lt;=^|{)(\s*[a-z0-9_$!]+\s*)(?=,|}|\$)</string>
        <key>end</key>
        <string>(?i)(?=})</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>entity.name.type.idl</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#named_structure_tokens</string>
          </dict>
        </array>
      </dict>
      <key>structure_inheritance</key>
      <dict>
        <key>match</key>
        <string>(?i)\b(inherits)\s+([a-z_0-9$]+)</string>
        <key>captures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>keyword.control.idl</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>storage.type.idl</string>
          </dict>
        </dict>
      </dict>
      <key>structure_property</key>
      <dict>
        <key>begin</key>
        <string>(?i)([a-z0-9_$]*\s*):</string>
        <key>end</key>
        <string>(?i)(?=\buntil\b|\belse\b|\bthen\b|\bdo\b|\bof\b|\)|\]|\}|,|;)|(?=(?&lt;!&amp;)&amp;(?!&amp;))|(?&lt;!\$\s*|\$\s*;.*)$</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>entity.name.tag.idl</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#routine_tokens</string>
          </dict>
        </array>
      </dict>
      <key>structure_self</key>
      <dict>
        <key>name</key>
        <string>entity.name.type.idl</string>
        <key>match</key>
        <string>(?i)\bself\b</string>
      </dict>
      <key>type_no_highlight</key>
      <dict>
        <key>name</key>
        <string>variable.other.readwrite.ts.idl</string>
        <key>match</key>
        <string>(?i)\||&lt;|&gt;|,</string>
      </dict>
      <key>variable</key>
      <dict>
        <key>name</key>
        <string>variable.other.readwrite.ts.idl</string>
        <key>match</key>
        <string>(?i)(?&lt;!\.|\/|::|-&gt;|@)\b[a-z0-9_$]+(?![a-z0-9_$]*::)</string>
      </dict>
      <key>variable_system</key>
      <dict>
        <key>name</key>
        <string>constant.language.idl</string>
        <key>match</key>
        <string>(?i)![a-z0-9_$]+</string>
      </dict>
      <key>white_space</key>
      <dict>
        <key>name</key>
        <string>meta.var.expr.idl</string>
        <key>match</key>
        <string>(?i)\s+</string>
      </dict>
    </dict>
  </dict>
</plist>